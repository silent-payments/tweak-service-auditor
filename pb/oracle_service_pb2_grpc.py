# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import indexing_server_pb2 as indexing__server__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in oracle_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OracleServiceStub(object):
    """OracleService provides access to blockchain data via gRPC
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StreamBlockBatchSlim = channel.unary_stream(
                '/blindbit.oracle.v1.OracleService/StreamBlockBatchSlim',
                request_serializer=indexing__server__pb2.RangedBlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.BlockBatchSlim.FromString,
                _registered_method=True)
        self.StreamBlockBatchFull = channel.unary_stream(
                '/blindbit.oracle.v1.OracleService/StreamBlockBatchFull',
                request_serializer=indexing__server__pb2.RangedBlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.BlockBatchFull.FromString,
                _registered_method=True)
        self.GetTweakArray = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetTweakArray',
                request_serializer=indexing__server__pb2.BlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.TweakArray.FromString,
                _registered_method=True)
        self.GetTweakIndexArray = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetTweakIndexArray',
                request_serializer=indexing__server__pb2.GetTweakIndexRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.TweakArray.FromString,
                _registered_method=True)
        self.GetUTXOArray = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetUTXOArray',
                request_serializer=indexing__server__pb2.BlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.UTXOArrayResponse.FromString,
                _registered_method=True)
        self.GetFilter = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetFilter',
                request_serializer=indexing__server__pb2.GetFilterRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.FilterRepsonse.FromString,
                _registered_method=True)
        self.GetSpentOutpointsIndex = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetSpentOutpointsIndex',
                request_serializer=indexing__server__pb2.BlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.SpentOutpointsIndexResponse.FromString,
                _registered_method=True)
        self.GetInfo = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=indexing__server__pb2.InfoResponse.FromString,
                _registered_method=True)
        self.GetBestBlockHeight = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetBestBlockHeight',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=indexing__server__pb2.BlockHeightResponse.FromString,
                _registered_method=True)
        self.GetBlockHashByHeight = channel.unary_unary(
                '/blindbit.oracle.v1.OracleService/GetBlockHashByHeight',
                request_serializer=indexing__server__pb2.BlockHeightRequest.SerializeToString,
                response_deserializer=indexing__server__pb2.BlockHashResponse.FromString,
                _registered_method=True)


class OracleServiceServicer(object):
    """OracleService provides access to blockchain data via gRPC
    """

    def StreamBlockBatchSlim(self, request, context):
        """StreamBlockBatchSlim streams lightweight block batches for efficient processing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamBlockBatchFull(self, request, context):
        """StreamBlockBatchFull streams complete block batches with all data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTweakArray(self, request, context):
        """GetTweakArray returns tweaks for a specific block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTweakIndexArray(self, request, context):
        """GetTweakIndexArray returns tweak index data for a specific block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUTXOArray(self, request, context):
        """GetUTXOArray returns UTXOs for a specific block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilter(self, request, context):
        """GetFilter returns filter data for a specific block height and type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpentOutpointsIndex(self, request, context):
        """GetSpentOutpointsIndex returns spent outpoints index for a specific block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
        """GetInfo returns oracle information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBestBlockHeight(self, request, context):
        """GetBestBlockHeight returns the current best block height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockHashByHeight(self, request, context):
        """GetBlockHashByHeight returns the block hash for a given height
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OracleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StreamBlockBatchSlim': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamBlockBatchSlim,
                    request_deserializer=indexing__server__pb2.RangedBlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.BlockBatchSlim.SerializeToString,
            ),
            'StreamBlockBatchFull': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamBlockBatchFull,
                    request_deserializer=indexing__server__pb2.RangedBlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.BlockBatchFull.SerializeToString,
            ),
            'GetTweakArray': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTweakArray,
                    request_deserializer=indexing__server__pb2.BlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.TweakArray.SerializeToString,
            ),
            'GetTweakIndexArray': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTweakIndexArray,
                    request_deserializer=indexing__server__pb2.GetTweakIndexRequest.FromString,
                    response_serializer=indexing__server__pb2.TweakArray.SerializeToString,
            ),
            'GetUTXOArray': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUTXOArray,
                    request_deserializer=indexing__server__pb2.BlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.UTXOArrayResponse.SerializeToString,
            ),
            'GetFilter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilter,
                    request_deserializer=indexing__server__pb2.GetFilterRequest.FromString,
                    response_serializer=indexing__server__pb2.FilterRepsonse.SerializeToString,
            ),
            'GetSpentOutpointsIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpentOutpointsIndex,
                    request_deserializer=indexing__server__pb2.BlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.SpentOutpointsIndexResponse.SerializeToString,
            ),
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=indexing__server__pb2.InfoResponse.SerializeToString,
            ),
            'GetBestBlockHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBestBlockHeight,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=indexing__server__pb2.BlockHeightResponse.SerializeToString,
            ),
            'GetBlockHashByHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockHashByHeight,
                    request_deserializer=indexing__server__pb2.BlockHeightRequest.FromString,
                    response_serializer=indexing__server__pb2.BlockHashResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blindbit.oracle.v1.OracleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('blindbit.oracle.v1.OracleService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OracleService(object):
    """OracleService provides access to blockchain data via gRPC
    """

    @staticmethod
    def StreamBlockBatchSlim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/StreamBlockBatchSlim',
            indexing__server__pb2.RangedBlockHeightRequest.SerializeToString,
            indexing__server__pb2.BlockBatchSlim.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamBlockBatchFull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/StreamBlockBatchFull',
            indexing__server__pb2.RangedBlockHeightRequest.SerializeToString,
            indexing__server__pb2.BlockBatchFull.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTweakArray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetTweakArray',
            indexing__server__pb2.BlockHeightRequest.SerializeToString,
            indexing__server__pb2.TweakArray.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTweakIndexArray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetTweakIndexArray',
            indexing__server__pb2.GetTweakIndexRequest.SerializeToString,
            indexing__server__pb2.TweakArray.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUTXOArray(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetUTXOArray',
            indexing__server__pb2.BlockHeightRequest.SerializeToString,
            indexing__server__pb2.UTXOArrayResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFilter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetFilter',
            indexing__server__pb2.GetFilterRequest.SerializeToString,
            indexing__server__pb2.FilterRepsonse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSpentOutpointsIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetSpentOutpointsIndex',
            indexing__server__pb2.BlockHeightRequest.SerializeToString,
            indexing__server__pb2.SpentOutpointsIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            indexing__server__pb2.InfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBestBlockHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetBestBlockHeight',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            indexing__server__pb2.BlockHeightResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBlockHashByHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blindbit.oracle.v1.OracleService/GetBlockHashByHeight',
            indexing__server__pb2.BlockHeightRequest.SerializeToString,
            indexing__server__pb2.BlockHashResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
